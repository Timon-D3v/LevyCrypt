# Folder structure

public / +
 | css / +
 | | global.css
 | | style.css
 | | {{sitename}}.css
 | js / +
 | | functions.js
 | | constants.js
 | | global.js
 | | io.js
 | | barba.js
 | | gsap.js
 | | chat.js
 | | {{sitename}}.js
 | img / -
 | files / -
database / +
 | database.js
 | backup / +
 | | {{date}}_{{database name}}.json
 | setup/ +
 | | {{number (3 dig)}}_{{database name}}.sql
components / +
 | functions.js
 | constants.js
 | events.js
routes / +
 | {{route}}.js
views / +
 | index.ejs
 | chat.ejs
 | login.ejs
 | settings.ejs
 | snippets / +
 | | head.ejs
 | | nav.ejs
 | | header.ejs
 | | footer.ejs
 | | chat.ejs
 | | contacts.ejs
node_modules / -
app.js
.env
README.md
package.json
package-lock.json
LICENSE
.gitignore
_guidance.txt



# Content

public / +
    All files that should be served.
global.css
    Basic styles. This includes repeating sets like a class named "text" or "title".
    This file should be very tiny.
style.css
    All other styles except one-page-styles. These include all styles for the nav, header and footer.
{{sitename}}.css
    One-page styles.
functions.js
    Global functions that are used across multiple sites.
    This includes functions like toBase64().
constants.js
    Global constant that are used across multiple sites.
    These include for example elements from the nav.
global.js
    Global javascript file. This includes tasks like setting up event listeners.
    The structure should be like this:
        - Define variables
        - Execute one time code
        - Set up functions
        - Set up event listeners while only passing in functions that are already declared
io.js
    Front-end socket file. Same structure as global.js.
barba.js
    All barba transitions. Same structure as global.js.
gsap.js
    Declare gsap functions as normal functions. Same structure as global.js.
chat.js
    All chat related javascript. Same structure as global.js.
{{sitename}}.js
    One-page javascript. Same structure as global.js.
img / +
    All static images.
files / +
    All static files that are not images.
database.js
    All queries to the database are sent from here.
database/backup / +
    Is in the .gitignore. Stores backups of the database.
database/setup / +
    SQL statements to create all databases.
components/functions.js
    Every function that is used in the backend files.
components/constants.js
    Constants for the backend files.
routes.js
    Here are all the routes managed.
events.js
    Backend for the socket.io websocket.
views / +
    All ejs files.
/views/snippets / +
    Repetitive code snippets for the normal ejs files.
app.js
    The running the server. Exports app as default.



# Variable names

All variable names should be written as a whole word.
If the variable contains two words, then the space should be replaced with a underscore.
Constants should be written all capital.
Functions should be defined as arrow functions in a constant.
Functions should be named as a small description and with capital letters every new word starts.



# Styles

Variables for every color with different shades and opacities.
There should be a color for the text and background plus three different colors.
For measures use pixels, vw/vh and %.
For responsive layout use variables for every measure defined in the root.
Media queries are used to set the variables in the root to a different value based on the width and height.
Also use clamp() for most things. (Ex. clamp(20px, 3vw + 10px, 100px))