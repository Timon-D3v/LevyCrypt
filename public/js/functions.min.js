import timon,{post,getElm,getQuery,createElm}from"timonjs";import socket from"./io.js";import crypto from"crypto";import user from"user";function validateEmail(email){const regex=/^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/;return regex.test(email)}async function login(email,password){if(!validateEmail(email))return timon.errorField("Bitte gib eine gültige E-Mail-Adresse ein.");getQuery(".auth-button").forEach((button=>button.disabled=true));const encryptedPassword=await crypto.clientEncrypt(password);const res=await post("/auth/login",{email:email,password:encryptedPassword,publicKey:getKey("client_publicKey")});if(res.valid){init2Fa()}else{timon.errorField(res.message)}}async function signUp(email,password,name,family_name,picture_element){if(!validateEmail(email)){timon.errorField("Bitte gib eine gültige E-Mail-Adresse ein.");return}getQuery(".auth-button").forEach((button=>button.disabled=true));let picture="";try{picture=await picture_element.getImgBase64()}catch(err){console.info(err.message)}const encryptedPassword=await crypto.clientEncrypt(password);const res=await post("/auth/signUp",{email:email,password:encryptedPassword,name:name,family_name:family_name,picture:picture,publicKey:getKey("client_publicKey")});if(res.valid){init2Fa()}else{getQuery(".auth-button").forEach(button=>button.disabled = false);timon.errorField(res.message)}}function displayChat(data){const outerElement=createElm("div");outerElement.addClass(data.from===user.email?"user-message":"contact-message","outer-message");let innerElement;switch(data.message.type){case"text":innerElement=createElm("p");innerElement.text(data.message.content);break;case"image":innerElement=createElm("img");innerElement.attribute("src","/img/placeholder.gif");innerElement.data("data-original-name",data.message.name);displayImage(data.message,innerElement);break;case"video":innerElement=createElm("video");innerElement.attribute("src",data.message.content);break;case"file":innerElement=createElm("a");innerElement.attribute("href",data.message.content);innerElement.text("Download");break;case"3d":innerElement=createElm("iframe");innerElement.attribute("src",data.message.url);break;default:innerElement=createElm("p");innerElement.html("<i>Unsupported message type.</i>");break}innerElement.addClass("inner-message");outerElement.append(innerElement);const main=getQuery("main").get(0);main.append(outerElement);main.scrollTo({top:main.scrollHeight,behavior:"smooth"})}async function displayImage(data,element){const res=await fetch(data.url,{method:"GET"});const{response:response}=await res.json();const base64=await crypto.decryptBase64(response.base64.data,response.base64.key,response.base64.iv);element.attribute("src",base64);element.attribute("alt",data.name)}async function getPublicInfo(email){return await post("/security/get-public-info",{email:email})}async function sendMessage(data){const recipient=await currentChatPartnerInfo();socket.emit("send-message",{from:user.email,to:recipient.email,message:data,userPublicKey:getKey("client_publicKey"),recipientPublicKey:recipient.online?recipient.publicKey:getKey("client_publicKey")})}async function initChats(){const element=getElm("history");const keyElement=getElm("symmetricKey");const ivElement=getElm("iv");const encrypted=element.text();const encryptedKey=keyElement.text();const encryptedIv=ivElement.text();const main=getQuery("main").get(0);const keyArray=encryptedKey.split(",").map(Number);const ivArray=encryptedIv.split(",").map(Number);const key=await crypto.clientDecrypt(keyArray);const iv=await crypto.clientDecrypt(ivArray);const decrypted=await crypto.cipherDecrypt(encrypted,key,iv);const history=JSON.parse(decrypted);element.remove();keyElement.remove();ivElement.remove();history.forEach((element=>displayChat(element)));main.scrollTo({top:main.scrollHeight,behavior:"smooth"})}function getKey(type){return JSON.parse(window.sessionStorage.getItem(type))}async function init2Fa(){const res=await post("/auth/2fa/sendCode");if(!res.valid){return timon.errorField(res.message)}const form=createElm("form"),input=createElm("input"),button=createElm("button"),label=createElm("label"),wrapper=getQuery(".auth-container").get(0);label.attribute("for","auth-code-input");label.text("Code");label.addClass("auth-label");input.id="auth-code-input";input.type="number";input.addClass("auth-input");button.id="auth-code-button";button.type="button";button.text("Verifizieren");button.addClass("auth-button");button.click(check2FA);getElm("login").hide();getElm("sign-up").hide();getQuery(".auth-change").hide();getQuery(".auth-title").get(0).html("2-Faktor-Authentifizierung");form.append(label, input, button);wrapper.append(form)}async function check2FA(){const code=getElm("auth-code-input");const email=getElm("email");if(code.valIsEmpty()||code.val().length>6)return timon.errorField("Bitte gib einen gültigen Code ein.");const res=await post("/auth/2fa/verifyCode",{code:code.val(),email:email.valIsEmpty()?getElm("new-email").val():email.val()});if(!res.valid)return timon.errorField(res.message);socket.emit("verification",{email:email.valIsEmpty()?getElm("new-email").val():email.val(),publicKey:getKey("client_publicKey")});window.location.href+="chat"}function currentChatPartner(){return new URLSearchParams(window.location.search).get("email")}async function currentChatPartnerInfo(){return await getPublicInfo(currentChatPartner())}async function sendImage(input){const name=input.file().name;const base64=await input.getImgBase64();const data=await crypto.encryptBase64(base64);const res=await post("/upload",{from:user.email,to:currentChatPartner(),type:"image",name:name,data:data});if(!res.valid)return timon.errorField(res.message);const outerElement=createElm("div");outerElement.addClass("user-message","outer-message");const element=createElm("img");element.attribute("src",base64);element.attribute("alt",name);element.data("data-original-name",name);element.addClass("inner-message");outerElement.append(element);getQuery("main").get(0).append(outerElement);getElm("file-menu").toggleClass("invisible")}function send3D(input){const name=input.file().name;const reader=new FileReader;reader.onerror=e=>{timon.errorField(`File could not be read: ${e.target.error.code}`)};reader.onload=async e=>{const base64=e.target.result;const data=await crypto.encryptBase64(base64);const res=await post("/upload",{from:user.email,to:currentChatPartner(),type:"3d",name:name,data:data});if(!res.valid)return timon.errorField(res.message);const outerElement=createElm("div");outerElement.addClass("user-message","outer-message");const element=createElm("iframe");element.attribute("src",res.url);element.data("data-original-name",name);element.addClass("inner-message");outerElement.append(element);getQuery("main").get(0).append(outerElement);getElm("file-menu").toggleClass("invisible")};reader.readAsDataURL(input.file())}async function sendHandler(){const input=getElm("main-input");if(input.valIsEmpty())return;sendMessage({type:"text",content:await crypto.encryptLongText(input.val())});input.val("")}async function initNav(){const{encrypted:encrypted}=await post("/security/get-nav-messages");const decrypted=await crypto.decryptLongText(encrypted.data,encrypted.key,encrypted.iv);const data=JSON.parse(decrypted);getElm("nav").html("");data.forEach((message=>{displayNavMessage(message)}))}async function displayNavMessage(data){const outerElement=createElm("a");outerElement.addClass("nav-element");const isFromUser=data.from===user.email;const contact=await getPublicInfo(isFromUser?data.to:data.from);outerElement.attribute("href",`/chat?email=${contact.email}`);const innerElement=createElm("p");innerElement.addClass("nav-message");const messageStart=isFromUser?"You: ":`${contact.name}: `;switch(data.message.type){case"text":innerElement.html(messageStart+data.message.content);break;case"image":innerElement.html(`${messageStart}Bild (${data.message.name})`);break;case"video":innerElement.html(`${messageStart}Video (${data.message.name})`);break;case"file":innerElement.html(`${messageStart}Datei (${data.message.name})`);break;case"3d":innerElement.html(`${messageStart}3D-Modell`);break;default:innerElement.html("<i>Unsupported message type.</i>");break}const img=createElm("img");img.addClass("nav-picture");img.attribute("src",contact.picture);img.attribute("alt",contact.name+"'s Profilbild");img.attribute("title",contact.name+" "+contact.family_name);const h3=createElm("h3");h3.addClass("nav-name");h3.text(contact.name+" "+contact.family_name);const div=createElm("div");div.addClass("nav-info");div.append(h3,innerElement);outerElement.append(img,div);getElm("nav").append(outerElement)}async function namespaceChat(){const{email:email,name:name,family_name:family_name,picture:picture}=await currentChatPartnerInfo();const img=getElm("contact-profile-picture");getElm("contact-name").text(`${name} ${family_name}`);getElm("profile-picture").attribute("href",`/chat?email=${email}`);img.attribute("src",picture);img.attribute("alt",`${name}'s Profilbild`);img.attribute("title",`${name} ${family_name}`);closeMobileOptions();initChats();initNav();socket.emit("join-room",email);getElm("send").click(sendHandler);getElm("show-file-menu").click((()=>{getElm("file-menu").toggleClass("invisible")}))}function updateNav(){initNav()}async function updateSearch(){const input=getElm("search");if(input.valIsEmpty()||input.val().trim()==="")return;const{data:data}=await post("/security/get-users-where",{input:input.val().trim()});getElm("search-results").html("");data.forEach((element=>displaySearchResult(element)))}function displaySearchResult(element){const outerElement=createElm("a");outerElement.addClass("nav-element");outerElement.attribute("href",`/chat?email=${element.email}`);const innerElement=createElm("p");innerElement.addClass("nav-message");innerElement.html(element.email);const img=createElm("img");img.addClass("nav-picture");img.attribute("src",element.picture);img.attribute("alt",element.name+"'s Profilbild");img.attribute("title",element.name+" "+element.family_name);const h3=createElm("h3");h3.addClass("nav-name");h3.text(element.name+" "+element.family_name);const div=createElm("div");div.addClass("nav-info");div.append(h3,innerElement);outerElement.append(img,div);getElm("search-results").append(outerElement)}function closeMobileOptions(){if(window.innerWidth>1e3)return;try{getElm("mobile___options-wrapper").remove()}catch(e){console.error("No mobile options wrapper found.")}finally{getElm("nav").removeClass("mobile___nav-active");getElm("search-results").removeClass("mobile___search-results");getQuery(".search").get(0).removeClass("mobile___search-container")}}function openMobileSearchOptions(){const div=createElm("div");const logo=createElm("img");const title=createElm("h1");const close=createElm("img");const results=getElm("search-results");const bar=getQuery(".search").get(0);logo.addClass("mobile___search-logo");logo.src="/img/logo.svg";logo.alt="Logo";logo.title="LevyCrypt";logo.css({filter:"none"});title.addClass("mobile___search-title");title.text("Suchen");close.addClass("mobile___search-close");close.src="/img/svg/close.svg";close.alt="Schliessen";close.title="Schliessen";close.css({cursor:"pointer"});close.click(closeMobileOptions);div.addClass("mobile___search");div.id="mobile___options-wrapper";div.append(logo,title,close);results.addClass("mobile___search-results");bar.addClass("mobile___search-container");getQuery("body").get(0).append(div)}function openMobileNavOptions(){const div=createElm("div");const logo=createElm("img");const title=createElm("h1");const close=createElm("img");const nav=getElm("nav");logo.addClass("mobile___chats-logo");logo.src="/img/logo.svg";logo.alt="Logo";logo.title="LevyCrypt";logo.css({filter:"none"});title.addClass("mobile___chats-title");title.text("Chats");close.addClass("mobile___chats-close");close.src="/img/svg/close.svg";close.alt="Schliessen";close.title="Schliessen";close.css({cursor:"pointer"});close.click(closeMobileOptions);div.addClass("mobile___chats");div.id="mobile___options-wrapper";div.append(logo,title,close);nav.addClass("mobile___nav-active");getQuery("body").get(0).append(div)}export default{validateEmail:validateEmail,login:login,signUp:signUp,displayChat:displayChat,getPublicInfo:getPublicInfo,sendMessage:sendMessage,initChats:initChats,getKey:getKey,currentChatPartner:currentChatPartner,currentChatPartnerInfo:currentChatPartnerInfo,sendImage:sendImage,send3D:send3D,sendHandler:sendHandler,initNav:initNav,displayNavMessage:displayNavMessage,namespaceChat:namespaceChat,updateNav:updateNav,updateSearch:updateSearch,displaySearchResult:displaySearchResult,closeMobileOptions:closeMobileOptions,openMobileSearchOptions:openMobileSearchOptions,openMobileNavOptions:openMobileNavOptions};export{validateEmail,login,signUp,displayChat,getPublicInfo,sendMessage,initChats,getKey,currentChatPartner,currentChatPartnerInfo,sendImage,send3D,sendHandler,initNav,displayNavMessage,namespaceChat,updateNav,updateSearch,displaySearchResult,closeMobileOptions,openMobileSearchOptions,openMobileNavOptions};